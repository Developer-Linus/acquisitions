name: Tests

on:
  push:
    branches: ["main", "staging"]
  pull_request:
    branches: ["main", "staging"]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      NODE_OPTIONS: --experimental-vm-modules
      # Provide a placeholder DB URL; replace with a real test DB or service if needed
      DATABASE_URL: postgres://user:pass@localhost:5432/testdb
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        id: run-tests
        run: |
          set -euo pipefail
          npm test
        continue-on-error: true

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            coverage/**
            coverage/lcov.info
          if-no-files-found: ignore
          retention-days: 30

      - name: Test Summary
        if: always()
        run: |
          status="${{ steps.run-tests.outcome }}"
          {
            echo "## Test Summary"
            echo ""
            echo "- Status: ${status}"
            if [ -f coverage/lcov.info ] || [ -d coverage ]; then
              echo "- Coverage: coverage artifacts uploaded."
            else
              echo "- Coverage: none detected."
            fi
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Annotate failures
        if: ${{ failure() || steps.run-tests.outcome == 'failure' }}
        run: |
          echo "::error ::One or more tests failed. See logs above. Run 'npm test' locally to reproduce."

      - name: Fail job if tests failed
        if: ${{ steps.run-tests.outcome != 'success' }}
        run: exit 1
